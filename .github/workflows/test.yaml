name: Test
on:
    pull_request:

jobs:
    #########################################################
    # Code quality and unit tests
    #########################################################
    test_quality_dotnet:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                dotnet-version: [ '6.0' ]
        steps:
        -   uses: actions/checkout@v3
        -   name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
            uses: actions/setup-dotnet@v2
            with:
                dotnet-version: ${{ matrix.dotnet-version }}
        -   run: dotnet format --verify-no-changes
    
    
    test_quality_terraform:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project:
                -   name: 'App.Function.Banktransaction.Import'
                    service: 'function-banktransaction-import'
                    dotnet-version: '6.0'
        steps:
        -   uses: actions/checkout@v3
        -   uses: hashicorp/setup-terraform@v2
        -   run: |
                test -d ${{ matrix.project.name }}/terraform || exit 0
                cd ${{ matrix.project.name }}/terraform
                terraform init
                terraform validate
        -   uses: reviewdog/action-tflint@master
            with:
                github_token: ${{ secrets.github_token }}
                working_directory: ${{ matrix.project.name }}/terraform
                reporter: github-pr-review
    
    test_quality_typescript:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project:
                -   name: 'frontend-web'
                    nodejs-version: '18.10'
        steps:
        -   uses: actions/checkout@v3
        -   uses: actions/setup-node@v3
            with:
                node-version: ${{ matrix.project.nodejs-version }}
        -   uses: reviewdog/action-eslint@v1
            with:
                reporter: github-pr-review
                workdir: ${{ matrix.project.name }}
                fail_on_error: true
    
    test_unit_typescript_ensure:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project:
                -   name: 'frontend-web'
                    nodejs-version: '18.10'
        steps:
        -   uses: actions/checkout@v3
        -   run: cd ${{ matrix.project.name }} && ../.github/ensure_frontend_tests.sh
    
    test_unit_typescript:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project:
                -   name: 'frontend-web'
                    nodejs-version: '18.10'
        steps:
        -   uses: actions/checkout@v3
        -   uses: actions/setup-node@v3
            with:
                node-version: ${{ matrix.project.nodejs-version }}
        -   run: |
                cd ${{ matrix.project.name }}
                npm ci
                npm run test -- --reporters="default" --reporters="jest-md-dashboard"
        -   uses: marocchino/sticky-pull-request-comment@v2
            if: always()
            with:
                path: ${{ matrix.project.name }}/test-dashboard.md
                header: unit_typescript

    test_unit_dotnet:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project:
                -   name: 'App.Function.Banktransaction.Import'
                    dotnet-version: '6.0'
                -   name: 'App.Function.Integration.Ynab'
                    dotnet-version: '6.0'
                -   name: 'App.Lib.Database'
                    dotnet-version: '6.0'
        steps:
        -   uses: actions/checkout@v3
        -   name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
            uses: actions/setup-dotnet@v2
            with:
                dotnet-version: ${{ matrix.dotnet-version }}
        -   run: |
                echo "title=Test Run for PR #${{github.event.number}} Run #${{github.run_number}}" >> $GITHUB_ENV
                echo "file_name=TestReport.${{ matrix.project.dotnet-version }}.${{ matrix.project.name }}.${{github.sha}}.md" >> $GITHUB_ENV  
        -   run: dotnet restore ${{ matrix.project.name }}.Tests
        -   run: dotnet build --no-restore ${{ matrix.project.name }}.Tests
        -   run: docker-compose -f App.Lib.Tests/docker-compose.yaml up -d
        -   run: dotnet test --no-restore --no-build --logger "liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};" ${{ matrix.project.name }}.Tests
        -   uses: marocchino/sticky-pull-request-comment@v2
            if: always()
            with:
                path: ${{github.workspace}}/${{env.file_name}}
                header: unit_dotnet

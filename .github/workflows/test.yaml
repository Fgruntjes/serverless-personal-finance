name: Test
on:
    pull_request:

jobs:
    #########################################################
    # Code quality and unit tests
    #########################################################
    test_quality:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                dotnet-version: [ '6.0.x' ]
        steps:
        - uses: actions/checkout@v3
        - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
          uses: actions/setup-dotnet@v2
          with:
              dotnet-version: ${{ matrix.dotnet-version }}
        - uses: actions/github-script@v6
          id: environment
          with:
            script: |
              return context.ref
                .replace(/^refs\//, '')
                .replace(/\/merge$/, '')
                .replace(/\//, '-')
        - run: |
              echo "file_name=FormatReport.${{ matrix.dotnet-version }}.${{steps.environment.outputs.result}}.${{github.run_number}}.json" >> $GITHUB_ENV
        - run: dotnet format --verify-no-changes
              
    test_integration:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                dotnet-version: [ '6.0.x' ]
                project: [ 'App.Function.Banktransaction.Import.Tests' ]
        steps:
            - uses: actions/checkout@v3
            - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
              uses: actions/setup-dotnet@v2
              with:
                  dotnet-version: ${{ matrix.dotnet-version }}
            - uses: actions/github-script@v6
              id: environment
              with:
                script: |
                  return context.ref
                    .replace(/^refs\//, '')
                    .replace(/\/merge$/, '')
                    .replace(/\//, '-')
            - run: |
                echo "title=Test Run for PR #${{steps.environment.outputs.result}} (${{github.run_number}})" >> $GITHUB_ENV
                echo "file_name=TestReport.${{ matrix.dotnet-version }}.${{ matrix.project }}.${{steps.environment.outputs.result}}.${{github.run_number}}.md" >> $GITHUB_ENV  
            - run: dotnet restore ${{ matrix.project }}
            - run: dotnet build --no-restore ${{ matrix.project }}
            - run: (test -f ${{ matrix.project }}/docker-compose.yaml && docker-compose -f ${{ matrix.project }}/docker-compose.yaml up -d) || true 
            - run: dotnet test --no-restore --no-build --logger "liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};" ${{ matrix.project }}
            - uses: marocchino/sticky-pull-request-comment@v2
              if: ${{always()}}
              with:
                  path: ${{github.workspace}}/${{env.file_name}}

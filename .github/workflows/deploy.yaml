name: Deploy
on:
    workflow_call:
        inputs:
            environment:
                required: true
                type: string
            tag:
                required: true
                type: string
            region:
                required: false
                default: 'europe-central2'

jobs:
    project_matrix:
        uses: ./.github/workflows/project_matrix.yaml
        
    deploy:
        runs-on: ubuntu-latest
        environment:
            name: ${{inputs.environment}}
            url: https://github.com
        needs:
        - build
        permissions:
            contents: 'read'
            id-token: 'write'
        strategy:
            matrix:
                project: ${{fromJson(needs.project_matrix.outputs.functions)}}
        steps:
        -   uses: actions/checkout@v3
        -   uses: google-github-actions/auth@v0
            with:
                workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
                service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        # Deploy cloud functions
        -   run: environment_input="${{ inputs.environment }}"; echo "dotnet_env=$(echo "${environment_input%%_*}" | sed -e 's/^./\U&/)" >> $GITHUB_ENV
        -   uses: mshick/fast-envsubst@v1
            env:
                SERVICE: ${{ matrix.project }}
                DEPLOY_ENV: ${{inputs.environment}}
                DOTNET_ENVIRONMENT: ${{ env.dotnet_env }}
                IMAGE: gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/${{ matrix.project }}:${{inputs.tag}}
                Database__ConnectionString: ${{ secrets.DATABASE__CONNECTIONSTRING }}
                Sentry__Dsn: ${{ secrets.SENTRY__DSN }}
                Database__DatabaseName: ${{inputs.environment}}
            with:
                in-file: ${{ matrix.project }}/service.yaml
                out-file: ${{ matrix.project }}/service.deploy.yaml
        -   run: cat ${{ matrix.project }}/service.deploy.yaml
        -   uses: google-github-actions/deploy-cloudrun@v0
            id: cloudrun
            with:
                metadata: ${{ matrix.project }}/service.deploy.yaml
                region: ${{ inputs.region }}
        # Deploy infra (terraform)
        -   uses: hashicorp/setup-terraform@v2
        -   run: |
                test -d ${{ matrix.project }}/terraform || exit 0
                cd ${{ matrix.project }}/terraform
                terraform init
                terraform plan -out plan.tf \
                    -var "environment=${{ inputs.environment }}" \
                    -var "cloudrun_url=${{ steps.cloudrun.outputs.url }}"
                terraform apply -auto-approve plan.tf

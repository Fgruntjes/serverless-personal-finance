name: Deploy
on:
    push:
        branches:
        - "main"
        - "beta"
        - "alpha"

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                project:
                -   name: 'App.Function.Banktransaction.Import'
                    service: 'function-banktransaction-import'
                    dotnet-version: '6.0'
        permissions:
            contents: 'read'
            id-token: 'write'
        steps:
        -   uses: actions/checkout@v3
        -   uses: google-github-actions/auth@v0
            id: google_auth
            with:
                token_format: 'access_token'
                workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
                service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        -   uses: docker/login-action@v2
            with:
                registry: gcr.io
                username: oauth2accesstoken
                password: ${{ steps.google_auth.outputs.access_token }}
        -   run: echo "slug=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV
        -   uses: docker/setup-buildx-action@v2
        -   uses: docker/build-push-action@v3
            with:
                context: .
                file: '${{ matrix.project.name }}/Dockerfile'
                push: true
                build-args: DOTNET_VERSION=${{ matrix.project.dotnet-version }}
                tags: gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/${{ matrix.project.service }}:${{env.slug}}
                cache-from: type=gha
                cache-to: type=gha,mode=max
    
    deploy:
        runs-on: ubuntu-latest
        needs:
        - build
        permissions:
            contents: 'read'
            id-token: 'write'
        strategy:
            matrix:
                project:
                -   name: 'App.Function.Banktransaction.Import'
                    service: 'function-banktransaction-import'
                    dotnet-version: '6.0'
                region: [ 'europe-central2' ]
        steps:
        -   uses: actions/checkout@v3
        -   run: echo "slug=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV
        -   uses: actions/github-script@v6
            id: environment
            with:
                script: |
                    if (context.ref.includes('beta')) {
                      return 'Staging';
                    }
                    return 'Production';
                result-encoding: string
        -   run: echo "environment_lowercase=$(echo ${{ steps.environment.outputs.result }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        -   uses: mshick/fast-envsubst@v1
            env:
                SERVICE: ${{ matrix.project.service }}
                DEPLOY_ENV: ${{ env.environment_lowercase }}
                DOTNET_ENVIRONMENT: ${{ steps.environment.outputs.result }}
                IMAGE: gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/${{ matrix.project.service }}:${{env.slug}}
                Database__ConnectionString: ${{ secrets.DATABASE__CONNECTIONSTRING }}
                Database__DatabaseName: ${{steps.environment.outputs.result}}
                Sentry__Dsn: ${{ secrets.SENTRY__DSN }}
            with:
                in-file: ${{ matrix.project.name }}/service.yaml
                out-file: ${{ matrix.project.name }}/service.deploy.yaml
        -   run: cat ${{ matrix.project.name }}/service.deploy.yaml
        -   uses: google-github-actions/auth@v0
            id: google_auth
            with:
                workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
                service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        -   uses: google-github-actions/deploy-cloudrun@v0
            with:
                metadata: ${{ matrix.project.name }}/service.deploy.yaml
                region: ${{ matrix.region }}
